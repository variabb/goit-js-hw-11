{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["export function fetchImages(query) {\n  const apiKey = '46054500-d9995bae73a62b965b4fbf26c';\n  const url = `https://pixabay.com/api/?key=${apiKey}&q=${encodeURIComponent(query)}&image_type=photo&orientation=horizontal&safesearch=true`;\n\n  return fetch(url)\n    .then(response => response.json())\n    .then(data => data.hits)\n    .catch(error => {\n      console.error('Error:', error);\n      return [];\n    });\n}\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nlet lightbox;\n\nexport function initializeLightbox() {\n  lightbox = new SimpleLightbox('.gallery a', {\n    captionsData: 'alt',\n    captionDelay: 250,\n  });\n}\n\nexport function refreshLightbox() {\n  if (lightbox) {\n    lightbox.refresh();\n  }\n}\n\nexport function createImageCards(images, gallery) {\n  const markup = images.map(image => `\n    <li class=\"gallery-item\">\n      <div class=\"photo-card\">\n        <a href=\"${image.largeImageURL}\" class=\"link\">\n          <img src=\"${image.webformatURL}\" alt=\"${image.tags}\" loading=\"lazy\" />\n        </a>\n        <div class=\"info\">\n          <p class=\"info-item\"><b class=\"name-info\">Likes</b> ${image.likes}</p>\n          <p class=\"info-item\"><b class=\"name-info\">Views</b> ${image.views}</p>\n          <p class=\"info-item\"><b class=\"name-info\">Comments</b> ${image.comments}</p>\n          <p class=\"info-item\"><b class=\"name-info\">Downloads</b> ${image.downloads}</p>\n        </div>\n      </div>\n    </li>\n  `).join('');\n\n  gallery.insertAdjacentHTML('beforeend', markup);\n  \n  refreshLightbox();\n}\n\nexport function clearGallery(gallery) {\n  gallery.innerHTML = ''; \n}\n\nexport function showLoader(loadingIndicator) {\n  loadingIndicator.classList.remove('hidden');\n  loadingIndicator.style.display = 'block'; \n}\n\nexport function hideLoader(loadingIndicator) {\n  loadingIndicator.classList.add('hidden');\n  loadingIndicator.style.display = 'none'; \n}","import SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nimport { fetchImages } from './js/pixabay-api.js';\nimport { \n  createImageCards, \n  clearGallery, \n  showLoader, \n  hideLoader, \n  initializeLightbox \n} from './js/render-functions.js';\n\nconst searchForm = document.querySelector('#search-form');\nconst gallery = document.querySelector('.gallery');\nconst loadingIndicator = document.querySelector('#loading-indicator');\n\ninitializeLightbox();\n\nsearchForm.addEventListener('submit', onSearch);\n\nfunction onSearch(event) {\n  event.preventDefault();\n  const query = event.currentTarget.elements.searchQuery.value.trim();\n\n  if (query === '') {\n    iziToast.error({\n      title: 'Error',\n      message: \"Sorry, there are no images matching your search query. Please try again!\",\n      position: 'topRight',\n      titleColor: '#fafafb',\n      iconUrl: '/src/public/favicon.svg',\n      icon: 'icon-Not',\n      color: '#fafafb',\n      backgroundColor: '#ef4040',\n      messageColor: '#fafafb',\n      progressBar: true,\n      progressBarColor: '#B51B1B',\n      iconColor: '#fafafb',\n    });\n    return;\n  }\n\n  clearGallery(gallery);\nshowLoader(loadingIndicator);\nsetTimeout(() => hideLoader(loadingIndicator), 3000);\n  \n  fetchImages(query)\n    .then(images => {\n      hideLoader(loadingIndicator);\n\n      if (images.length === 0) {\n        iziToast.error({\n          title: 'Error',\n          message: 'Sorry, there are no images matching your search query. Please try again!',\n        });\n        return;\n      }\n\n      createImageCards(images, gallery);\n    })\n    .catch(error => {\n      hideLoader(loadingIndicator);\n      iziToast.error({\n        title: 'Error',\n        message: 'Something went wrong! Please try again later.',\n      });\n      console.error('Error fetching images:', error);\n    });\n}"],"names":["fetchImages","query","url","response","data","error","lightbox","initializeLightbox","SimpleLightbox","refreshLightbox","createImageCards","images","gallery","markup","image","clearGallery","showLoader","loadingIndicator","hideLoader","searchForm","onSearch","event","iziToast"],"mappings":"6vBAAO,SAASA,EAAYC,EAAO,CAEjC,MAAMC,EAAM,qEAA4C,mBAAmBD,CAAK,CAAC,2DAEjF,OAAO,MAAMC,CAAG,EACb,KAAKC,GAAYA,EAAS,MAAM,EAChC,KAAKC,GAAQA,EAAK,IAAI,EACtB,MAAMC,IACL,QAAQ,MAAM,SAAUA,CAAK,EACtB,GACR,CACL,CCRA,IAAIC,EAEG,SAASC,GAAqB,CACnCD,EAAW,IAAIE,EAAe,aAAc,CAC1C,aAAc,MACd,aAAc,GAClB,CAAG,CACH,CAEO,SAASC,GAAkB,CAC5BH,GACFA,EAAS,QAAO,CAEpB,CAEO,SAASI,EAAiBC,EAAQC,EAAS,CAChD,MAAMC,EAASF,EAAO,IAAIG,GAAS;AAAA;AAAA;AAAA,mBAGlBA,EAAM,aAAa;AAAA,sBAChBA,EAAM,YAAY,UAAUA,EAAM,IAAI;AAAA;AAAA;AAAA,gEAGIA,EAAM,KAAK;AAAA,gEACXA,EAAM,KAAK;AAAA,mEACRA,EAAM,QAAQ;AAAA,oEACbA,EAAM,SAAS;AAAA;AAAA;AAAA;AAAA,GAIhF,EAAE,KAAK,EAAE,EAEVF,EAAQ,mBAAmB,YAAaC,CAAM,EAE9CJ,GACF,CAEO,SAASM,EAAaH,EAAS,CACpCA,EAAQ,UAAY,EACtB,CAEO,SAASI,EAAWC,EAAkB,CAC3CA,EAAiB,UAAU,OAAO,QAAQ,EAC1CA,EAAiB,MAAM,QAAU,OACnC,CAEO,SAASC,EAAWD,EAAkB,CAC3CA,EAAiB,UAAU,IAAI,QAAQ,EACvCA,EAAiB,MAAM,QAAU,MACnC,CCtCA,MAAME,EAAa,SAAS,cAAc,cAAc,EAClDP,EAAU,SAAS,cAAc,UAAU,EAC3CK,EAAmB,SAAS,cAAc,oBAAoB,EAEpEV,IAEAY,EAAW,iBAAiB,SAAUC,CAAQ,EAE9C,SAASA,EAASC,EAAO,CACvBA,EAAM,eAAc,EACpB,MAAMpB,EAAQoB,EAAM,cAAc,SAAS,YAAY,MAAM,OAE7D,GAAIpB,IAAU,GAAI,CAChBqB,EAAS,MAAM,CACb,MAAO,QACP,QAAS,2EACT,SAAU,WACV,WAAY,UACZ,QAAS,0BACT,KAAM,WACN,MAAO,UACP,gBAAiB,UACjB,aAAc,UACd,YAAa,GACb,iBAAkB,UAClB,UAAW,SACjB,CAAK,EACD,MACD,CAEDP,EAAaH,CAAO,EACtBI,EAAWC,CAAgB,EAC3B,WAAW,IAAMC,EAAWD,CAAgB,EAAG,GAAI,EAEjDjB,EAAYC,CAAK,EACd,KAAKU,GAAU,CAGd,GAFAO,EAAWD,CAAgB,EAEvBN,EAAO,SAAW,EAAG,CACvBW,EAAS,MAAM,CACb,MAAO,QACP,QAAS,0EACnB,CAAS,EACD,MACD,CAEDZ,EAAiBC,EAAQC,CAAO,CACtC,CAAK,EACA,MAAMP,GAAS,CACda,EAAWD,CAAgB,EAC3BK,EAAS,MAAM,CACb,MAAO,QACP,QAAS,+CACjB,CAAO,EACD,QAAQ,MAAM,yBAA0BjB,CAAK,CACnD,CAAK,CACL"}